library(glmertree)
library(glmertree)
library(glmertree)
MHserv_data <- read.table("MHserv_data.txt",
colClasses = c(ethnicity = "factor",
cluster_id = "factor"))
install.packages("glmertree")
install.packages("glmertree")
library(jsonlite)
library(lme4)
library(lattice)
library(lmerTest)
library(MuMIn)
library(performance)
library(rstudioapi)
library(sjPlot)
library(xtable)
library(emmeans)
library(car)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
source("helpers.R")
config <- fromJSON("config.json")
dataframes_dir <- config$dataframes_dir
file <- config$scores_filename
file <- paste(dataframes_dir, file, sep = "/")
data <- read.csv(file)
# ----------------------------------------------------------------------
# Data preparation
# Preparation 1: Model to factor then sum coding
n_models <- length(unique(data$model))
model_order <- names(config$models_dict)
data$model <- factor(data$model, levels = model_order)
contrasts(data$model) <- contr.sum(n_models)
# Preparation 2: MoCA_group
n_groups <- length(unique(data$MoCA_group))
data$MoCA_group <- factor(data$MoCA_group, levels = c("normal", "low"))
contrasts(data$MoCA_group) <- contr.sum(n_groups)
# Preparation 3: Subject ID
data$subject_id <- factor(data$subject_id)
# Preparation 4: z-score continuous variables
data$PTA_z <- scale(data$PTA_dB)
# Check what contrasts look like
data$model
data$MoCA_group
# Check factor variable
data$subject_id
# Check z-scored continuous variables
data$PTA_z
# ----------------------------------------------------------------------
# Define fixed effects structure
# (I only include random intercepts in random effects structure)
# Model: Three-way interaction between MoCA_group, PTA_z, and model
max_model <- lmer(
score_r ~ 1 + MoCA_group * PTA_z * model +
(1 | subject_id),
data = data,
control = lmerControl(optimizer = "bobyqa")
)
red1_model <- lmer(
score_r ~ 1 + MoCA_group * PTA_z + model +
(1 | subject_id),
data = data,
control = lmerControl(optimizer = "bobyqa")
)
red2_model <- lmer(
score_r ~ 1 + MoCA_group * model +
(1 | subject_id),
data = data,
control = lmerControl(optimizer = "bobyqa")
)
anova(max_model, red1_model, red2_model)
final_model <- max_model
# 1. Check Residuals
# Residuals vs Fitted
plot(fitted(final_model), residuals(final_model), main = "Residuals vs Fitted")
abline(h = 0, col = "red")
View(config)
# QQ Plot of residuals
qqnorm(residuals(final_model))
qqline(residuals(final_model), col = "red")
# Histogram of residuals
hist(residuals(final_model), breaks = 30, main = "Histogram of Residuals")
# 2. Random Effects
# Extract random effects
ranef(final_model)
final_model
summary(final_model)
summary(red1_model)
